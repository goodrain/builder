#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# config

BIN_DIR=$(dirname $0)
BUILD_DIR=$1
CACHE_DIR=$2
LP_DIR=`cd $(dirname $0); cd ..; pwd`
StaticRuntimefile=$1"/runtime.txt"

# include .files when moving things around
shopt -s dotglob

cd $BUILD_DIR

WEBSERVER=$(cat $StaticRuntimefile)

# move app things to www
mkdir -p /tmp/www
mv * /tmp/www
mv /tmp/www .


# keep Procfile
if [ -f www/Procfile ]; then
  mv www/Procfile .
fi

fetch_nginx_tarball() {
    local NGINX_VERSION="1.14.2"
    local NGINX_URL="http://lang.goodrain.me/static/r6d/nginx/nginx-${NGINX_VERSION}.tar.gz"
    local NGINX_PATH="nginx"
    # install nginx if needed
    if [ ! -d "$NGINX_PATH" ]; then
        [ -z "$DEBUG_INFO" ] && echo "-----> Installed Nginx ${NGINX_VERSION}" || echo "-----> Installed Nginx ${NGINX_VERSION} from $NGINX_URL."
        mkdir -p $NGINX_PATH/conf.d
        curl --silent --max-time 60 --location $NGINX_URL | tar xz --strip-components 2 -C $NGINX_PATH
    fi

    # update config files
    cp -a $LP_DIR/conf/nginx.conf $NGINX_PATH/conf/nginx.conf
    
    if [ -f "www/web.conf" ]; then
        echo "-----> Detected custom configuration: web.conf"
        mv www/web.conf $NGINX_PATH/conf.d/
        # Todo check web.conf 
    else
        echo "-----> Use the default configuration: web.conf"
        cat > $NGINX_PATH/conf.d/web.conf <<EOF
server {
    listen       80;
    
    location / {
        root   /app/www;
        index  index.html index.htm;
    }
}
EOF
    fi

    cat >>boot.sh <<EOF
sed -i -r  "s/(listen ).*/\1\$PORT;/" /app/nginx/conf.d/web.conf
touch /app/nginx/logs/access.log
touch /app/nginx/logs/error.log
ln -sf /dev/stdout /app/nginx/logs/error.log
ln -sf /dev/stderr /app/nginx/logs/access.log
echo "Launching nginx"
exec /app/nginx/sbin/nginx -g 'daemon off;'
EOF
}

fetch_apache_tarball() {
    local APACHE_VERSION="2.2.19"
    local APACHE_PATH="apache"
    local APACHE_URL="http://lang.goodrain.me/static/apache-$APACHE_VERSION.tar.gz"
    # install apache if needed
    if [ ! -d "$APACHE_PATH" ]; then
      [ -z "$DEBUG_INFO" ] && echo "-----> Installing Apache $APACHE_VERSION" || echo "-----> Installing Apache $APACHE_VERSION from $APACHE_URL."
      curl --silent --max-time 60 --location $APACHE_URL | tar xz
    fi
    # update config files
    cp $LP_DIR/conf/apache.conf $APACHE_PATH/conf/httpd.conf

    cat >>boot.sh <<EOF
sed -i 's/Listen 80/Listen '\$PORT'/' /app/apache/conf/httpd.conf
for var in \`env|cut -f1 -d=\`; do
  echo "PassEnv \$var" >> /app/apache/conf/httpd.conf;
done
touch /app/apache/logs/error_log
touch /app/apache/logs/access_log
tail -F /app/apache/logs/error_log &
tail -F /app/apache/logs/access_log &
echo "Launching apache"
exec /app/apache/bin/httpd -DNO_DETACH
EOF
}

# Get web server, default apache

if [ ! -z "$USE_NGINX" ]; then
    fetch_nginx_tarball
elif [ ! -z "$USE_APACHE" ]; then
    fetch_apache_tarball
else
    echo ${RUNTIMES_SERVER:-nginx} | grep -i nginx >/dev/null  && fetch_nginx_tarball || fetch_apache_tarball
fi

chmod +x boot.sh